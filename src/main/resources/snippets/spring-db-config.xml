<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012-2013 Manuel Schulze <manuel_schulze@i-entwicklung.de>
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--
    Ok, das wäre ziemlich durch die Brust gewesen. Wir wollten eigentlich die c3p0 Konfiguration im hibernate Paket
    ablegen. Per Default kann c3p0 seine Konfiguration nur von der Wurzel im Klassenpfad lesen, also
    classpath:c3p0.properties als Beispiel. Durch setzen der com.mchange.v2.c3p0.cfg.xml Systemeigenschaft kann c3p0
    die Konfiguration auch von anderen Orten laden. Leider nicht aus dem Klassenpfad. Diese Möglichkeit ist dazu
    gedacht beim Hochfahren der Anwendung die c3p0 Konfiguration irgendwo aus dem System (z.B. aus /etc) zu laden.

    Da die Systemeigenschaft vor der DataSource Konfiguration gesetzt werden muss, ist bei der DataSource Konfiguration
    ein depends-on="springDbSystemPropertiesConfiguration" notwendig.

    Ich hebe den Code aber mal auf, da ich ihn ganz nützlich finde.

    Für weitere Informationen:
    see http://www.mchange.com/projects/c3p0/#locating_configuration_information
    see http://2mohitarora.blogspot.de/2011/09/how-to-set-system-property-using-spring.html
    -->
    <bean id="springDbSystemPropertiesConfiguration"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" value="#{@systemProperties}"/>
        <property name="targetMethod" value="putAll"/>
        <property name="arguments">
            <util:properties>
                <prop key="com.mchange.v2.c3p0.cfg.xml">/etc/c3p0-config.xml</prop>
            </util:properties>
        </property>
    </bean>

    <!-- MySQL DataSource -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
          depends-on="springDbSystemPropertiesConfiguration">
        <property name="driverClass" value="@db.driverClass@"/>
        <property name="jdbcUrl" value="@db.jdbcUrl@"/>
        <property name="user" value="@db.user@"/>
        <property name="password" value="@db.password@"/>
    </bean>

</beans>